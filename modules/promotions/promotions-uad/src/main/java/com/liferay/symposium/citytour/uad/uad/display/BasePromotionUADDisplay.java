/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.symposium.citytour.uad.uad.display;

import com.liferay.portal.kernel.dao.orm.DynamicQuery;
import com.liferay.portal.kernel.exception.PortalException;

import com.liferay.symposium.citytour.uad.uad.constants.CitytourUADConstants;
import com.liferay.symposium.citytours.promotions.model.Promotion;
import com.liferay.symposium.citytours.promotions.service.PromotionLocalService;

import com.liferay.user.associated.data.display.BaseModelUADDisplay;

import org.osgi.service.component.annotations.Reference;

import java.io.Serializable;

import java.util.List;

/**
 * Provides the base implementation for the Promotion UAD display.
 *
 * <p>
 * This implementation exists only as a container for the default methods
 * generated by ServiceBuilder. All custom methods should be put in
 * {@link PromotionUADDisplay}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @generated
 */
public abstract class BasePromotionUADDisplay extends BaseModelUADDisplay<Promotion> {
	@Override
	public Promotion get(Serializable primaryKey) throws PortalException {
		return promotionLocalService.getPromotion(Long.valueOf(
				primaryKey.toString()));
	}

	@Override
	public String[] getDisplayFieldNames() {
		return new String[] { "description", "price", "destinationCity" };
	}

	@Override
	public Class<Promotion> getTypeClass() {
		return Promotion.class;
	}

	@Override
	protected long doCount(DynamicQuery dynamicQuery) {
		return promotionLocalService.dynamicQueryCount(dynamicQuery);
	}

	@Override
	protected DynamicQuery doGetDynamicQuery() {
		return promotionLocalService.dynamicQuery();
	}

	@Override
	protected List<Promotion> doGetRange(DynamicQuery dynamicQuery, int start,
		int end) {
		return promotionLocalService.dynamicQuery(dynamicQuery, start, end);
	}

	@Override
	protected String[] doGetUserIdFieldNames() {
		return CitytourUADConstants.USER_ID_FIELD_NAMES_PROMOTION;
	}

	@Reference
	protected PromotionLocalService promotionLocalService;
}